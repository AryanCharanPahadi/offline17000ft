import 'dart:convert';

SchoolRecceModal schoolRecceModalFromJson(String str) =>
    SchoolRecceModal.fromJson(json.decode(str));

String schoolRecceModalToJson(SchoolRecceModal data) =>
    json.encode(data.toJson());

class SchoolRecceModal {
  int? id;
  String? tourId;
  String? school;
  String? udiseValue;
  String? udise_correct;
  String? boardImg;
  String? buildingImg;
  String? gradeTaught;
  String? instituteHead;
  String? headDesignation;
  String? headPhone;
  String? headEmail;
  String? appointedYear;
  String? noTeachingStaff;
  String? noNonTeachingStaff;
  String? totalStaff;
  String? registerImg;
  String? smcHeadName;
  String? smcPhone;
  String? smcQual;
  String? qualOther;
  String? totalSmc;
  String? meetingDuration;
  String? meetingOther;
  String? smcDesc;
  String? noUsableClass;
  String? electricityAvailability;
  String? networkAvailability;
  String? digitalLearning;
  String? smartClassImg;
  String? projectorImg;
  String? computerImg;
  String? libraryExisting;
  String? libImg;
  String? playGroundSpace;
  String? spaceImg;
  String? enrollmentReport;
  String? enrollmentImg;
  String? academicYear;
  String? gradeReportYear1;
  String? gradeReportYear2;
  String? gradeReportYear3;
  String? DigiLabRoomImg;
  String? libRoomImg;
  String? remoteInfo;
  String? motorableRoad;
  String? languageSchool;
  String? languageOther;
  String? supportingNgo;
  String? otherNgo;
  String? observationPoint;
  String? submittedBy;
  String? createdAt;
  String? office;

  SchoolRecceModal({
    this.id,
    required this.tourId,
    required this.school,
    required this.udiseValue,
    required this.udise_correct,
    required this.boardImg,
    required this.buildingImg,
    required this.gradeTaught,
    required this.instituteHead,
    required this.headDesignation,
    required this.headPhone,
    required this.headEmail,
    required this.appointedYear,
    required this.noTeachingStaff,
    required this.noNonTeachingStaff,
    required this.totalStaff,
    required this.registerImg,
    required this.smcHeadName,
    required this.smcPhone,
    required this.smcQual,
    required this.qualOther,
    required this.totalSmc,
    required this.meetingDuration,
    required this.meetingOther,
    required this.smcDesc,
    required this.noUsableClass,
    required this.electricityAvailability,
    required this.networkAvailability,
    required this.digitalLearning,
    required this.smartClassImg,
    required this.projectorImg,
    required this.computerImg,
    required this.libraryExisting,
    required this.libImg,
    required this.playGroundSpace,
    required this.spaceImg,
    required this.enrollmentReport,
    required this.enrollmentImg,
    required this.academicYear,
    required this.gradeReportYear1,
    required this.gradeReportYear2,
    required this.gradeReportYear3,
    required this.DigiLabRoomImg,
    required this.libRoomImg,
    required this.remoteInfo,
    required this.motorableRoad,
    required this.languageSchool,
    required this.languageOther,
    required this.supportingNgo,
    required this.otherNgo,
    required this.observationPoint,
    required this.submittedBy,
    required this.createdAt,
  this.office,
  });

  factory SchoolRecceModal.fromJson(Map<String, dynamic> json) =>
      SchoolRecceModal(
        id: json["id"],
        tourId: json["tourId"],
        school: json["school"],
        udiseValue: json["udiseValue"],
        udise_correct: json["udise_correct"],
        boardImg: json["boardImg"],
        buildingImg: json["buildingImg"],
        gradeTaught: json["gradeTaught"],
        instituteHead: json["instituteHead"],
        headDesignation: json["headDesignation"],
        headPhone: json["headPhone"],
        headEmail: json["headEmail"],
        appointedYear: json["appointedYear"],
        noTeachingStaff: json["noTeachingStaff"],
        noNonTeachingStaff: json["noNonTeachingStaff"],
        totalStaff: json["totalStaff"],
        registerImg: json["registerImg"],
        smcHeadName: json["smcHeadName"],
        smcPhone: json["smcPhone"],
        smcQual: json["smcQual"],
        qualOther: json["qualOther"],
        totalSmc: json["totalSmc"],
        meetingDuration: json["meetingDuration"],
        meetingOther: json["meetingOther"],
        smcDesc: json["smcDesc"],
        noUsableClass: json["noUsableClass"],
        electricityAvailability: json["electricityAvailability"],
        networkAvailability: json["networkAvailability"],
        digitalLearning: json["digitalLearning"],
        smartClassImg: json["smartClassImg"],
        projectorImg: json["projectorImg"],
        computerImg: json["computerImg"],
        libraryExisting: json["libraryExisting"],
        libImg: json["libImg"],
        playGroundSpace: json["playGroundSpace"],
        spaceImg: json["spaceImg"],
        enrollmentReport: json["enrollmentReport"],
        enrollmentImg: json["enrollmentImg"],
        academicYear: json["academicYear"],
        gradeReportYear1: json["gradeReportYear1"],
        gradeReportYear2: json["gradeReportYear2"],
        gradeReportYear3: json["gradeReportYear3"],
        DigiLabRoomImg: json["DigiLabRoomImg"],
        libRoomImg: json["libRoomImg"],
        remoteInfo: json["remoteInfo"],
        motorableRoad: json["motorableRoad"],
        languageSchool: json["languageSchool"],
        languageOther: json["languageOther"],
        supportingNgo: json["supportingNgo"],
        otherNgo: json["otherNgo"],
        observationPoint: json["observationPoint"],
        submittedBy: json["submittedBy"],
        createdAt: json["createdAt"],
        office: json["office"],
      );

  Map<String, dynamic> toJson() => {
        "id": id,
        "tourId": tourId,
        "school": school,
        "udiseValue": udiseValue,
        "udise_correct": udise_correct,
        "boardImg": boardImg,
        "buildingImg": buildingImg,
        "gradeTaught": gradeTaught,
        "instituteHead": instituteHead,
        "headDesignation": headDesignation,
        "headPhone": headPhone,
        "headEmail": headEmail,
        "appointedYear": appointedYear,
        "noTeachingStaff": noTeachingStaff,
        "noNonTeachingStaff": noNonTeachingStaff,
        "totalStaff": totalStaff,
        "registerImg": registerImg,
        "smcHeadName": smcHeadName,
        "smcPhone": smcPhone,
        "smcQual": smcQual,
        "qualOther": qualOther,
        "totalSmc": totalSmc,
        "meetingDuration": meetingDuration,
        "meetingOther": meetingOther,
        "smcDesc": smcDesc,
        "noUsableClass": noUsableClass,
        "electricityAvailability": electricityAvailability,
        "networkAvailability": networkAvailability,
        "digitalLearning": digitalLearning,
        "smartClassImg": smartClassImg,
        "projectorImg": projectorImg,
        "computerImg": computerImg,
        "libraryExisting": libraryExisting,
        "libImg": libImg,
        "playGroundSpace": playGroundSpace,
        "spaceImg": spaceImg,
        "enrollmentReport": enrollmentReport,
        "enrollmentImg": enrollmentImg,
        "academicYear": academicYear,
        "gradeReportYear1": gradeReportYear1,
        "gradeReportYear2": gradeReportYear2,
        "gradeReportYear3": gradeReportYear3,
        "DigiLabRoomImg": DigiLabRoomImg,
        "libRoomImg": libRoomImg,
        "remoteInfo": remoteInfo,
        "motorableRoad": motorableRoad,
        "languageSchool": languageSchool,
        "languageOther": languageOther,
        "supportingNgo": supportingNgo,
        "otherNgo": otherNgo,
        "observationPoint": observationPoint,
        "submittedBy": submittedBy,
        "createdAt": createdAt,
        "office": office,
      };
}
